help read.table()
help read.table
help
help.start()
help (read.table)
x <- list(2, "a", "b", TRUE)
x
x[[2]]
x <- 1:4
y <- 2:3
sum <- x+y
sum
x <- c(3, 5, 1, 10, 12, 6)
x[x < 6] == 0
x[x < 6] <- 0
x <- c(3, 5, 1, 10, 12, 6)
x[x %in% 1:5] <- 0
help (%in%)
help (read.table)
help (%)
clear
clrscn
clr
clrscrn
install.packages("swirl")
library(swirl)
install_from_swirl("R Programming")
swirl()
5+7
x <- 5+7
x
y <- x - 3
y
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z * 2 + 100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z / my_sqrt
my_div
c(1, 2, 3, 4) + c(1, 10)
c(1, 2, 3, 4) + c(0, 10)
c(1, 2, 3, 4) + c(0, 10, 100)
z * 2 + 1000
my_div
getwd()
ls()
x <- 9
ls()
dir()
?list.files
args(list.files())
args(list.files)
old.dir <- wkdir()
old.dir <- getwd()
dir.create(testdir)
args(dir.create)
dir.create("testdir")
setwd("testdir")
dir()
file.create("mytest.R")
dir()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R", "mytest3.R")
file.path("mytest3.R")
file.path("folder1", "folder2")
?dir.create
dir.create("testdir2", "testdir2/testdir3", recursive = TRUE)
dir.create(file.path('testdir2', 'testdir3'), recursive = TRUE)
?unlink
unlink('testdir2', recursive = TRUE)
setwd(old.dir)
play()
dir.create('testdir/testdir2', recursive = TRUE)
dir.create('testdir/testdir3/testdir4', recursive = TRUE)
getwd()
nxt()
unlink('testdir', recursive = TRUE)
1:20
pi:10
15:1
?":"
seq(1, 20)
seq(0, 10, by=0.5)
my_seq <- seq(5, 10, length=30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0, 1, 2), times = 10)
rep(c(0, 1, 2), each = 10)
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, "Kiel")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(1:3, c("X", "y", "Z"), sep = "")
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
swirl()
x <- c(44, NA, 5, NA)
x * 3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y, z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0 / 0
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y > 0]
x[x > 0]
x[!is.na(x) & x > 0]\
x[!is.na(x) & x > 0]
x[c(x[3], x[5], x[7])]
c(x[3], x[5], x[7])
x[c(3, 5, 7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector <- (1:20)
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(1:20, nrow = 4, ncol = 5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
?colnames
colnames(my_data) <- cnames
my_data
TRUE == TRUE
(F == T) == F
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <= 10
5 != 7
5 !== 7
!(5 == 7)
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != * && 4 > 3.9
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6 > 4)
identical('')
identical('twins', 'twins')
xor(5 == 6, !FALSE)
play()
xor(4 >= 9, 8 != 8.0)
identical(xor, 'xor')
nxt()
ints <- sample(10)
ints
ints > 5
which(ints > 7)
any(ints < 0)
all(ints > 0)
exit()
setwd("C:/Users/ripst_000/Desktop/R Programming Course - Dec 2015/week 3/Assignment/ProgrammingAssignment2")
? <<-
?'$'
?"$"
?getmean
source('C:/Users/ripst_000/Desktop/R Programming Course - Dec 2015/week 3/Assignment/ProgrammingAssignment2/makevector.R')
source('C:/Users/ripst_000/Desktop/R Programming Course - Dec 2015/week 3/Assignment/ProgrammingAssignment2/cachemean.R')
makevector(10, 15, 20)
test <- makeVector(10, 15, 20)
test <- makevector(5)
test <- makeVector(5)
test
cachemean(test)
cachemean(test)
test <- makeVector(500)
cachemean(test)
cachemean(test)
test <- makeVector(c(10, 15, 20)
)
test
cachemean(test)
cachemean(test)
source('C:/Users/ripst_000/Desktop/R Programming Course - Dec 2015/week 3/Assignment/ProgrammingAssignment2/makevector.R')
test <- makeVector(c(1, 3, 5, 7, 9))
source('C:/Users/ripst_000/Desktop/R Programming Course - Dec 2015/week 3/Assignment/ProgrammingAssignment2/makevector.R')
test <- makeVector(c(1, 3, 5, 7, 9))
cachemean(test)
cachemean(test)
source('C:/Users/ripst_000/Desktop/R Programming Course - Dec 2015/week 3/Assignment/ProgrammingAssignment2/makevector.R')
?return
?solve
source('C:/Users/ripst_000/Desktop/R Programming Course - Dec 2015/week 3/Assignment/ProgrammingAssignment2/cachematrix.R')
source('C:/Users/ripst_000/Desktop/R Programming Course - Dec 2015/week 3/Assignment/ProgrammingAssignment2/cachematrix.R')
source('C:/Users/ripst_000/Desktop/R Programming Course - Dec 2015/week 3/Assignment/ProgrammingAssignment2/cachematrix.R')
?matrix
test <- matrix(1:4, 2, 2)
test
Itest <- solve(test)
Itest
testMatrix <- makeCacheMatrix(1:4, 2, 2)
testMatrix <- makeCacheMatrix(test)
ItestMatrix <- cacheSolve(testMatrix)
source('C:/Users/ripst_000/Desktop/R Programming Course - Dec 2015/week 3/Assignment/ProgrammingAssignment2/cachematrix.R')
ItestMatrix <- cacheSolve(testMatrix)
source('C:/Users/ripst_000/Desktop/R Programming Course - Dec 2015/week 3/Assignment/ProgrammingAssignment2/cachematrix.R')
ItestMatrix <- cacheSolve(testMatrix)
ItestMatrix
Itest == ItestMatrix
source('C:/Users/ripst_000/Desktop/R Programming Course - Dec 2015/week 3/Assignment/ProgrammingAssignment2/cachematrix.R')
ItestMatrix <- cacheSolve(testMatrix)
source('C:/Users/ripst_000/Desktop/R Programming Course - Dec 2015/week 3/Assignment/ProgrammingAssignment2/cachemean.R')
cacheSolve(testMatrix)
source('C:/Users/ripst_000/Desktop/R Programming Course - Dec 2015/week 3/Assignment/ProgrammingAssignment2/cachematrix.R')
